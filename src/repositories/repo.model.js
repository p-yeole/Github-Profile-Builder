import { model, Schema } from "mongoose";

const repoSchema = Schema(
	{
		id: { type: Number },
		node_id: { type: String },
		name: { type: String },
		full_name: { type: String },
		private: { type: Boolean },
		owner: {
			login: { type: String },
			id: { type: Number },
			node_id: { type: String },
			avatar_url: { type: String },
			gravatar_id: { type: String },
			url: { type: String },
			html_url: { type: String },
			followers_url: { type: String },
			following_url: { type: String },
			gists_url: { type: String },
			starred_url: { type: String },
			subscriptions_url: { type: String },
			organizations_url: { type: String },
			repos_url: { type: String },
			events_url: { type: String },
			received_events_url: { type: String },
			type: { type: String },
			site_admin: { type: Boolean },
			name: { type: String },
			company: { type: String },
			blog: { type: String },
			location: { type: String },
			email: { type: String },
			hireable: { type: Boolean },
			bio: { type: String },
			twitter_username: { type: String },
			public_repos: { type: Number },
			public_gists: { type: Number },
			followers: { type: Number },
			following: { type: Number },
		},
		html_url: { type: String },
		description: { type: String },
		fork: { type: Boolean },
		url: { type: String },
		forks_url: { type: String },
		keys_url: { type: String },
		collaborators_url: { type: String },
		teams_url: { type: String },
		hooks_url: { type: String },
		issue_events_url: { type: String },
		events_url: { type: String },
		assignees_url: { type: String },
		branches_url: { type: String },
		tags_url: { type: String },
		blobs_url: { type: String },
		git_tags_url: { type: String },
		git_refs_url: { type: String },
		trees_url: { type: String },
		statuses_url: { type: String },
		languages_url: { type: String },
		stargazers_url: { type: String },
		contributors_url: { type: String },
		subscribers_url: { type: String },
		subscription_url: { type: String },
	},
	{ timestamps: true }
);

export const RepoModel = model("repos", repoSchema);
